#!/usr/bin/python3
# encoding: utf-8
"""
Degoo commands -- Some CLI commands to interact with a Degoo cloud drive

Degoo lack a command line client, they lack a Linux client, but they
expose a GraphQL API which their web app (and probably their phone app)
communicate with. This is a reverse engineering based on observations of
those communications aand a Python client implementation.

@author:     Bernd Wechner

@copyright:  2020. All rights reserved.

@license:    The Hippocratic License 2.1

@contact:    YndlY2huZXJAeWFob28uY29t    (base64 encoded)
@deffield    updated: Updated
"""

import degoo
import os
import sys
import textwrap
from argparse import ArgumentParser, HelpFormatter

__all__ = []
__version__ = 0.1
__date__ = '2020-06-03'
__updated__ = '2020-06-03'

DEBUG = 0
TESTRUN = 0
PROFILE = 0

P = degoo.command_prefix


class CLIError(Exception):
    """Generic exception to raise and log different fatal errors."""
    def __init__(self, msg):
        super().__init__(type(self))
        self.msg = f"Eror: {msg}" 

    def __str__(self):
        return self.msg

    def __unicode__(self):
        return self.msg
    

class RawFormatter(HelpFormatter):
    def _fill_text(self, text, width, indent):
        return "\n".join([textwrap.fill(line, width) for line in textwrap.indent(textwrap.dedent(text), indent).splitlines()])


def main(argv=None):  # IGNORE:C0111
    """Command line options."""

    command = os.path.basename(sys.argv[0])
    
    program_version = f"v{__version__}" 
    program_build_date = str(__updated__)
    program_version_message = '%%(prog)s %s (%s)' % (program_version, program_build_date)
    program_shortdesc = __import__('__main__').__doc__.split("\n")[1]
    
    program_license = f'''
        {program_shortdesc}

        Created by Bernd Wechner on {str(__date__)}.
        Copyright 2020. All rights reserved.

        Licensed under The Hippocratic License 2.1
        https://firstdonoharm.dev/

        Distributed on an "AS IS" basis without warranties
        or conditions of any kind, either express or implied.

        USAGE:
        '''

    try:
        # Setup argument parser
        parser = ArgumentParser(description=program_license, formatter_class=RawFormatter)
        parser.add_argument("-v", "--verbose", action="count", default=0, help="set verbosity level [default: %(default)s]")
        parser.add_argument('-V', '--version', action='version', version=program_version_message)
        
        if command == P+"login":
            success = degoo.login()
            if success:
                print("Successfuly logged in.")
            else:
                print("Login failed.")

        return 0
    except KeyboardInterrupt:
        # handle keyboard interrupt
        return 0
    except Exception as e:
        if DEBUG or TESTRUN:
            raise e
        indent = len(command) * " "
        sys.stderr.write(command + ": " + str(e) + "\n")
        sys.stderr.write(indent + "  for help use --help\n")
        return 2


if __name__ == "__main__":
    sys.exit(main())
